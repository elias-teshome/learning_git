git config --global user.name <name>
git config --global user.email <email>

git config --global color.ui auto // for coloring

git init . //initilazing git in local machin the first time
           // if we clone the git we do not have to do git init

git add . // to add all file to the staging area
git add <file name> //add single file to the staging area
git add -A // add all file with out respect to the current folder
           //git add . only add the current folder file
           // git add -A this add all the file even out side of current folder

git commit -m "" //for commit and add message
git commit --amend -m "" //to ammend the current message we were 
                         //commited
git log //show the commitd file
git diff // show the different 

git restore <file name>// restore back to previous status

#######Push#########
push an existing repository from the command line
git remote add origin <repo name like https://github.com/elias-teshome/learning_git.git>
git branch -M main
git push -u origin main //this is for the first time push

git push //this is later push

when we already push local repo to github we do not have to 
do git push -u origin main just git push is enough

###########Pull#############
pull is the revers of push, get file from github to local machine

git pull

##########Branches###############
git branch // tells you which branch are currently working
           // only tell us the local branch
git branch -r // the same thing but tell us the remote branch

git branch -d <branch name> //deleting local branch not the remote


git branch -a //show all branches

git branch <name>// to create branch

git checkout <branch name>//to switch branches

git checkout -// this switch to the previus branch

//the local branch should be pushed to the github 
at the first time use 

git push -u origin <branch name> or  git push --set-upstream origin <branch name>


//not the first time use 
git push

git checkout -b <branch name>// creating and checkout to the new branch. this is 2 
                        //steps 

deleting local branch use:

 git branch -d branch_name
 git branch -D branch_name
The -d option is an alias for --delete, which only deletes the branch if it has already been fully merged in its upstream branch. You could also use -D, which is an alias for --delete --force, which deletes the branch "irrespective of its merged status." [Source: man git-branch]
Also note that git branch -d branch_name will fail if you are currently in the branch you want to remove. The message starts with error: Cannot delete the branch 'branch_name'. If so, first switch to some other branch, for example: git checkout main.

deleting remote branch use:

git push origin --delete {the_remote_branch}

########merge ##############
becare full to merge your branch to the main or master
branch instead of doing git merge <branch name> in the main branch.
use a pull requesst and some one upprove you code to merge then 
you can merege that to main. this is all done in the github sit not in the bash 

after resieving a request from some body then you can merge to main

